{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohan\\\\codebase\\\\react-router-dom\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Home from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport EditEvent from \"./pages/EditEvent\";\nimport EventDetail from \"./pages/EventDetail\";\nimport NewEvent from \"./pages/NewEvent\";\nimport Root from \"./pages/Root\";\nimport EventsRoot from \"./pages/EventsRoot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst eventsLoader = async () => {\n  axios.get(\"http://localhost:8080/events\").then(res => console.log(res)).catch(err => console.log(err));\n};\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this),\n    children: [{\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"events\",\n      loader: eventsLoader,\n      element: /*#__PURE__*/_jsxDEV(EventsRoot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: \":id\",\n        element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this)\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }, this)\n      }, {\n        path: \":event-id/edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","axios","Home","Events","EditEvent","EventDetail","NewEvent","Root","EventsRoot","jsxDEV","_jsxDEV","eventsLoader","get","then","res","console","log","catch","err","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","loader","index","_c","$RefreshReg$"],"sources":["C:/Users/mohan/codebase/react-router-dom/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport Home from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport EditEvent from \"./pages/EditEvent\";\nimport EventDetail from \"./pages/EventDetail\";\nimport NewEvent from \"./pages/NewEvent\";\nimport Root from \"./pages/Root\";\nimport EventsRoot from \"./pages/EventsRoot\";\n\nconst eventsLoader = async () => {\n  axios\n    .get(\"http://localhost:8080/events\")\n    .then((res) => console.log(res))\n    .catch((err) => console.log(err));\n};\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <Root />,\n      children: [\n        {\n          path: \"\",\n          element: <Home />,\n        },\n        {\n          path: \"events\",\n          loader: eventsLoader,\n          element: <EventsRoot />,\n          children: [\n            { index: true, element: <Events /> },\n            {\n              path: \":id\",\n              element: <EventDetail />,\n            },\n            {\n              path: \"new\",\n              element: <NewEvent />,\n            },\n            {\n              path: \":event-id/edit\",\n              element: <EditEvent />,\n            },\n          ],\n        },\n      ],\n    },\n  ]);\n\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/BV,KAAK,CACFW,GAAG,CAAC,8BAA8B,CAAC,CACnCC,IAAI,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,CAC/BG,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC;AACrC,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGpB,mBAAmB,CAAC,CACjC;IACEqB,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEZ,OAAA,CAACH,IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACjBC,QAAQ,EAAE,CACR;MACEN,IAAI,EAAE,EAAE;MACRC,OAAO,eAAEZ,OAAA,CAACR,IAAI;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAClB,CAAC,EACD;MACEL,IAAI,EAAE,QAAQ;MACdO,MAAM,EAAEjB,YAAY;MACpBW,OAAO,eAAEZ,OAAA,CAACF,UAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBC,QAAQ,EAAE,CACR;QAAEE,KAAK,EAAE,IAAI;QAAEP,OAAO,eAAEZ,OAAA,CAACP,MAAM;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC,EACpC;QACEL,IAAI,EAAE,KAAK;QACXC,OAAO,eAAEZ,OAAA,CAACL,WAAW;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACzB,CAAC,EACD;QACEL,IAAI,EAAE,KAAK;QACXC,OAAO,eAAEZ,OAAA,CAACJ,QAAQ;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACtB,CAAC,EACD;QACEL,IAAI,EAAE,gBAAgB;QACtBC,OAAO,eAAEZ,OAAA,CAACN,SAAS;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACvB,CAAC;IAEL,CAAC;EAEL,CAAC,CACF,CAAC;EAEF,oBAAOhB,OAAA,CAACX,cAAc;IAACqB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACI,EAAA,GAnCQX,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}