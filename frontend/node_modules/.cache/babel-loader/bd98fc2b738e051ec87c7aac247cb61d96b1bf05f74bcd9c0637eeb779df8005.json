{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohan\\\\codebase\\\\react-router-dom\\\\frontend\\\\src\\\\pages\\\\Events.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const eventsLoader = () => {\n  return axios.get(\"http://localhost:8080/events\").then(res => {\n    console.log(res.data.events);\n    return res.data.events;\n  }).catch(err => {\n    console.log(err);\n  });\n};\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  console.log(events);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [fetchedEvents, setFetchedEvents] = useState([]);\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchEvents() {\n  //     setIsLoading(true);\n  //     const response = await fetch(\"http://localhost:8080/events\");\n\n  //     if (!response.ok) {\n  //       setError(\"Fetching events failed.\");\n  //     } else {\n  //       const resData = await response.json();\n  //       setFetchedEvents(resData.events);\n  //     }\n  //     setIsLoading(false);\n  //   }\n\n  //   fetchEvents();\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["axios","EventsList","useLoaderData","jsxDEV","_jsxDEV","eventsLoader","get","then","res","console","log","data","events","catch","err","EventsPage","_s","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mohan/codebase/react-router-dom/frontend/src/pages/Events.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport EventsList from \"../components/EventsList\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\nexport const eventsLoader = () => {\r\n  return axios\r\n    .get(\"http://localhost:8080/events\")\r\n    .then((res) => {\r\n      console.log(res.data.events);\r\n      return res.data.events;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nfunction EventsPage() {\r\n  const events = useLoaderData();\r\n  console.log(events);\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  // const [fetchedEvents, setFetchedEvents] = useState([]);\r\n  // const [error, setError] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   async function fetchEvents() {\r\n  //     setIsLoading(true);\r\n  //     const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  //     if (!response.ok) {\r\n  //       setError(\"Fetching events failed.\");\r\n  //     } else {\r\n  //       const resData = await response.json();\r\n  //       setFetchedEvents(resData.events);\r\n  //     }\r\n  //     setIsLoading(false);\r\n  //   }\r\n\r\n  //   fetchEvents();\r\n  // }, []);\r\n  return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAOL,KAAK,CACTM,GAAG,CAAC,8BAA8B,CAAC,CACnCC,IAAI,CAAEC,GAAG,IAAK;IACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAACC,MAAM,CAAC;IAC5B,OAAOJ,GAAG,CAACG,IAAI,CAACC,MAAM;EACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACdL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;EAClB,CAAC,CAAC;AACN,CAAC;AAED,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMJ,MAAM,GAAGV,aAAa,CAAC,CAAC;EAC9BO,OAAO,CAACC,GAAG,CAACE,MAAM,CAAC;EACnB;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,oBAAOR,OAAA,CAACH,UAAU;IAACW,MAAM,EAAEA;EAAO;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACJ,EAAA,CAxBQD,UAAU;EAAA,QACFb,aAAa;AAAA;AAAAmB,EAAA,GADrBN,UAAU;AA0BnB,eAAeA,UAAU;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}