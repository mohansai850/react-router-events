{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohan\\\\codebase\\\\react-router-dom\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Events, { eventsLoader } from \"./pages/Events\";\nimport EditEvent from \"./pages/EditEvent\";\nimport EventDetail, { loader as eventDetailLoader, action as deleteEventDetail } from \"./pages/EventDetail\";\nimport NewEvent, { action as newEventAction } from \"./pages/NewEvent\";\nimport Root from \"./pages/Root\";\nimport EventsRoot from \"./pages/EventsRoot\";\nimport Error from \"./pages/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this),\n    children: [{\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventsRoot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }, this),\n        loader: eventsLoader\n      }, {\n        path: \":id\",\n        loader: eventDetailLoader,\n        id: \"event-detail\",\n        children: [{\n          path: \"\",\n          element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 28\n          }, this),\n          action: deleteEventDetail\n        }, {\n          path: \"edit\",\n          element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this)\n        }]\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }, this),\n        action: newEventAction\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","Home","Events","eventsLoader","EditEvent","EventDetail","loader","eventDetailLoader","action","deleteEventDetail","NewEvent","newEventAction","Root","EventsRoot","Error","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","_c","$RefreshReg$"],"sources":["C:/Users/mohan/codebase/react-router-dom/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Events, { eventsLoader } from \"./pages/Events\";\nimport EditEvent from \"./pages/EditEvent\";\nimport EventDetail, {\n  loader as eventDetailLoader,\n  action as deleteEventDetail,\n} from \"./pages/EventDetail\";\nimport NewEvent, { action as newEventAction } from \"./pages/NewEvent\";\nimport Root from \"./pages/Root\";\nimport EventsRoot from \"./pages/EventsRoot\";\nimport Error from \"./pages/Error\";\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <Root />,\n      errorElement: <Error />,\n      children: [\n        {\n          path: \"\",\n          element: <Home />,\n        },\n        {\n          path: \"events\",\n          element: <EventsRoot />,\n          children: [\n            { index: true, element: <Events />, loader: eventsLoader },\n            {\n              path: \":id\",\n              loader: eventDetailLoader,\n\n              id: \"event-detail\",\n              children: [\n                {\n                  path: \"\",\n                  element: <EventDetail />,\n                  action: deleteEventDetail,\n                },\n                {\n                  path: \"edit\",\n                  element: <EditEvent />,\n                },\n              ],\n            },\n            {\n              path: \"new\",\n              element: <NewEvent />,\n              action: newEventAction,\n            },\n          ],\n        },\n      ],\n    },\n  ]);\n\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AAEtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,IAAIC,YAAY,QAAQ,gBAAgB;AACrD,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,WAAW,IAChBC,MAAM,IAAIC,iBAAiB,EAC3BC,MAAM,IAAIC,iBAAiB,QACtB,qBAAqB;AAC5B,OAAOC,QAAQ,IAAIF,MAAM,IAAIG,cAAc,QAAQ,kBAAkB;AACrE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGlB,mBAAmB,CAAC,CACjC;IACEmB,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACJ,IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACjBC,YAAY,eAAET,OAAA,CAACF,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACvBE,QAAQ,EAAE,CACR;MACEP,IAAI,EAAE,EAAE;MACRC,OAAO,eAAEJ,OAAA,CAACf,IAAI;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAClB,CAAC,EACD;MACEL,IAAI,EAAE,QAAQ;MACdC,OAAO,eAAEJ,OAAA,CAACH,UAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBE,QAAQ,EAAE,CACR;QAAEC,KAAK,EAAE,IAAI;QAAEP,OAAO,eAAEJ,OAAA,CAACd,MAAM;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAAElB,MAAM,EAAEH;MAAa,CAAC,EAC1D;QACEgB,IAAI,EAAE,KAAK;QACXb,MAAM,EAAEC,iBAAiB;QAEzBqB,EAAE,EAAE,cAAc;QAClBF,QAAQ,EAAE,CACR;UACEP,IAAI,EAAE,EAAE;UACRC,OAAO,eAAEJ,OAAA,CAACX,WAAW;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;UACxBhB,MAAM,EAAEC;QACV,CAAC,EACD;UACEU,IAAI,EAAE,MAAM;UACZC,OAAO,eAAEJ,OAAA,CAACZ,SAAS;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QACvB,CAAC;MAEL,CAAC,EACD;QACEL,IAAI,EAAE,KAAK;QACXC,OAAO,eAAEJ,OAAA,CAACN,QAAQ;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QACrBhB,MAAM,EAAEG;MACV,CAAC;IAEL,CAAC;EAEL,CAAC,CACF,CAAC;EAEF,oBAAOK,OAAA,CAACjB,cAAc;IAACmB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACK,EAAA,GA7CQZ,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}